# header
echo
echo '****************************************************************'
echo starting ${pipeline.name}
date
echo

echo 1>&2
echo 1>&2 '****************************************************************'
echo 1>&2 starting ${pipeline.name}
date 1>&2
echo 1>&2

export PATH=${config['rnaseq']['path']}
export PYTHONPATH=$${PYTHONPATH}:${config['rnaseq']['root_dir']}/lib

exit_on_failure()
{
  retcode=$$1
  last_step=$$2
  pipelinerun_id=$$3	# optional
  steprun_id=$$4        # optional

  if [ $$retcode != 0 ]; then
    echo $${last_step} failed 1>&2
#    python $${root_dir}/bin/provenance update PipelineRun --id $$pipelinerun_id --status '$${last_step} failed' --successful=False
#    python $${root_dir}/bin/provenance update StepRun --id=$$steprun_id --status="$${last_step} failed" successful=False

    exit $$retcode
  else
    echo $${last_step} passed 1>&2
#    python $${root_dir}/bin/provenance update PipelineRun --id=$$pipelinerun_id --status="$${last_step} completed"
#    python $${root_dir}/bin/provenance update StepRun --id=$$steprun_id --status="$${last_step} completed" successful=True

  fi
}
