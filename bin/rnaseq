#-*-python-*-

# The main rnaseq entry point
# fixme: right now it's just a testbed for development

import sys, os, yaml, optparse
from warn import *

# Try to load the rnaseq modules:
try:
    from Rnaseq import *
except Exception as e:
    needed_dir=os.path.normpath(os.path.abspath(__file__)+"/../../lib")
    sys.stderr.write("Unable to import Rnaseq.  Perhaps you need to add "+needed_dir+" to your PYTHONPATH?\n")
    sys.stderr.write(yaml.dump(e))
    sys.stderr.write("(%s)\n" % e)
    sys.exit(1)


# global variables:
options={}                              # reset by parse_cmdline()

def main():
    usage="usage: %s [options] <pipeline> <readset>" % sys.argv[0] # fixme: form might be different; might be more like git
    argv=parse_cmdline(usage)       # not to be confused with sys.argv
    try: 
        pipeline_name=argv[1]
        readset_path=argv[2]
    except IndexError as ie:
        die(UserError(usage))

    readset=Readset(name=readset_path).load() 
    
    globals=read_globals()
    #print "globals is %s" % globals
    
    try: 
        pipeline=Pipeline(name=pipeline_name)
        assert pipeline.name==pipeline_name
        pipeline.load(readset)
        pipeline.update(globals)
    except IOError as e:
        die("Unable to load pipeline or step '%s'" % pipeline_name, e)
        
    print pipeline.sh_script()
    
    print "rnaseq: yay!"


########################################################################

# what to return? probably parsed argv
def parse_cmdline(usage):                    
    parser=optparse.OptionParser(usage)

    parser.add_option("-f","--config", dest="config", help="specify alternative config file",
                      default=os.path.normpath(os.path.abspath(__file__)+"/../../config/rnaseq.conf.yml"))
    parser.add_option('--cluster', dest='use_cluster', action='store_true', default=False)

    (values, argv)=parser.parse_args(sys.argv)
    global options
    options=values
    return argv                         # return remaining argv values


########################################################################

def read_globals():
    try: 
        config_file=options.config
        f=open(config_file)
        yml=f.read()
        f.close()
        globals=yaml.load(yml)
        return globals
    except IOError as ioe:
        warn("error trying to load global config file:")
        die(UserError(ioe))


########################################################################

main()
